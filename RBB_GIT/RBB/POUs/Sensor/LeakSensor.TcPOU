<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="LeakSensor" Id="{b3379e12-95d4-4dac-ac4b-7b8a2e3c1da6}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM LeakSensor
VAR
	leaksensorread: ModbusRtuMasterV2_KL6x22B;
	leakreceivedata : INT ;
	leakclock : TON;
    leaksensorerrorid : MODBUS_ERRORS;
	Leaksensorerror : BOOL;   
    leakstatetimer : TON; 
    LeakSensordata : BYTE; // UDP DATA
END_VAR

VAR_OUTPUT
	 
	 LeakSensorState : BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT leakclock.Q THEN
 leakclock(IN:=	TRUE, PT := T#1S);
 ELSE 
	 leakclock(IN:=FALSE);
 END_IF

	leaksensorread.ReadInputRegs(
	UnitID:= 1 , 
	Quantity:= 1, 
	MBAddr:= 16#0000 , 
	cbLength:= SIZEOF(leakreceivedata), 
	pMemoryAddr:= ADR(leakreceivedata), 
	AuxQuantity:= , 
	AuxMBAddr:= , 
	AuxcbLength:= , 
	pAuxMemoryAddr:= , 
	Execute:= leakclock.Q  , 
	Timeout:= T#1S, 
	BUSY=> , 
	Error=> Leaksensorerror, 
	ErrorId=>leaksensorerrorid , 
	cbRead=> ); 
	
LeakSensordata := LeakSensor.leaksensorread.InData.D[4] ;
  IF LeakSensordata =0 THEN    
     LeakSensorState := FALSE;
   ELSE
     LeakSensorState := TRUE;
   END_IF;
]]></ST>
    </Implementation>
    <LineIds Name="LeakSensor">
      <LineId Id="6" Count="20" />
      <LineId Id="5" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="48" Count="4" />
      <LineId Id="33" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>